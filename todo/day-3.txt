#################################################################################
4.   3Sum
    Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? 
    Find all unique triplets in the array which gives the sum of zero.
    Note: The solution set must not contain duplicate triplets.
    For example, given array S = [-1, 0, 1, 2, -1, -4],
    A solution set is:
    [
      [-1, 0, 1],
      [-1, -1, 2]
    ]

#################################################################################
5.   3Sum Closest
    Given an array S of n integers, find three integers in S such that the 
    sum is closest to a given number, target. Return the sum of the three integers. 
    You may assume that each input would have exactly one solution.
    For example, given array S = {-1 2 1 -4}, and target = 1.
    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

#################################################################################
6.   3Sum Smaller
    Given an array of n integers nums and a target, find the number of index triplets 
    i, j, k with 0 <= i < j < k < n that satisfy the condition nums[i] + nums[j] + nums[k] < target.
    For example, given nums = [-2, 0, 1, 3], and target = 2.
    Return 2. Because there are two triplets which sums are less than 2:
    [-2, 0, 1]
    [-2, 0, 3]

#################################################################################
8.   4Sum
    Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.
    Note: The solution set must not contain duplicate quadruplets.
    For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.
    A solution set is:
    [
      [-1,  0, 0, 1],
      [-2, -1, 1, 2],
      [-2,  0, 0, 2]
    ]

#################################################################################
9.   4Sum II
    Given four lists A, B, C, D of integer values, compute how many tuples (i, j, k, l) there are such that A[i] + B[j] + C[k] + D[l] is zero.
    To make problem a bit easier, all A, B, C, D have same length of N where 0 ≤ N ≤ 500. All integers are in the range of -228 to 228 - 1 and the result is guaranteed to be at most 231 - 1.
    Example:
    Input:
    A = [ 1, 2]
    B = [-2,-1]
    C = [-1, 2]
    D = [ 0, 2]
    Output:
    2
    Explanation:
    The two tuples are:
    1. (0, 0, 0, 1) -> A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0
    2. (1, 1, 0, 0) -> A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0

#################################################################################
557. Two Sum : Map <Reamining Val, Idx>
    Given an array of integers, return indices of the two numbers such that they add up to a specific target.
    You may assume that each input would have exactly one solution, and you may not use the same element twice.
    Example:
    Given nums = [2, 7, 11, 15], target = 9,
    Because nums[0] + nums[1] = 2 + 7 = 9,
    return [0, 1].

#################################################################################
558. Two Sum II - Input array is sorted
    Given an array of integers that is already sorted in ascending order, 
    find two numbers such that they add up to a specific target number.
    The function twoSum should return indices of the two numbers such that they add up to the target, 
    where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.
    You may assume that each input would have exactly one solution and you may not use the same element twice.
    Input: numbers={2, 7, 11, 15}, target=9
    Output: index1=1, index2=2

#################################################################################
559. Two Sum III - Data structure design
    Design and implement a TwoSum class. It should support the following operations: add and find.
    add - Add the number to an internal data structure.
    find - Find if there exists any pair of numbers which sum is equal to the value.
    For example,
    add(1); add(3); add(5);
    find(4) -> true
    find(7) -> false

#################################################################################
560. Two Sum IV - Input is a BST
    Given a Binary Search Tree and a target number, return true if there exist two elements in the BST such that their sum is equal to the given target.
    Example 1:
    Input: 
        5
       / \
      3   6
     / \   \
    2   4   7
    Target = 9
    Output: True
    Example 2:
    Input: 
        5
       / \
      3   6
     / \   \
    2   4   7
    Target = 28
    Output: False

#################################################################################
9 - problems
4.   3Sum
5.   3Sum Closest
6.   3Sum Smaller
8.   4Sum
9.   4Sum II
557. Two Sum : Map <Reamining Val, Idx>
558. Two Sum II - Input array is sorted
559. Two Sum III - Data structure design
560. Two Sum IV - Input is a BST
#################################################################################

vim:tw=90:et:norl:
