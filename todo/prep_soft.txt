#################################################################################
Reverse Words in a String II
  Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.
  The input string does not contain leading or trailing spaces and the words are always separated by a single space.
  For example,
  Given s = "the sky is blue",
  return "blue is sky the".
  Could you do it in-place without allocating extra space?

#################################################################################
Reverse Words in a String III
  Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.
  Example 1:
  Input: "Let's take LeetCode contest"
  Output: "s'teL ekat edoCteeL tsetnoc"
  Note: In the string, each word is separated by single space and there will not be any extra space in the string.

#################################################################################
Valid Parentheses
  Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
  The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

#################################################################################
Delete Alternate Nodes (How to do it with recursion)
  Given a Singly Linked List of size N, your task is to complete the function deleteAlt(), which starting from the second node delete all alternate nodes of the list.
  For example:
  Input: 1->2->3->4->5
  Output: 1->3->5
  Input: 1->2->3->4
  Output: 1->3
  Input:
  The function takes a single argument as input, the reference pointer to the head of the linked list.
  There will be T test cases and for each test case the function will be called separately. 
  Output:
  For each test the output will be space separated values of the linked list.
  Constraints:
  1<=T<=100
  1<=N<=100
  Example:
  Input:
  2
  6
  1 2 3 4 5 6
  4
  99 59 42 20
  Output:
  1 3 5
  99 42

#################################################################################
Largest BST Subtree
  Given a binary tree, find the largest subtree which is a Binary Search Tree (BST), where largest means subtree with largest number of nodes in it.
  Note:
  A subtree must include all of its descendants.
  Here's an example:
      10
      / \
     5  15
    / \   \ 
   1   8   7
  The Largest BST Subtree in this case is the highlighted one.
  The return value is the subtree's size, which is 3.
  Follow up:
  Can you figure out ways to solve it with O(n) time complexity? 

#################################################################################
Binary Tree Zigzag Level Order Traversal
  Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).
  For example:
  Given binary tree [3,9,20,null,null,15,7],
      3
     / \
    9  20
      /  \
     15   7
  return its zigzag level order traversal as:
  [
    [3],
    [20,9],
    [15,7]
  ]

#################################################################################
String Compression
Given an array of characters, compress it in-place.
The length after compression must always be smaller than or equal to the original array.
Every element of the array should be a character (not int) of length 1.
After you are done modifying the input array in-place, return the new length of the array.
Follow up:
Could you solve it using only O(1) extra space?
Example 1:
Input:
["a","a","b","b","c","c","c"]
Output:
Return 6, and the first 6 characters of the input array should be:
["a","2","b","2","c","3"]
Explanation:
"aa" is replaced by "a2". "bb" is replaced by "b2". "ccc" is replaced by "c3".
Example 2:
Input:
["a"]
Output:
Return 1, and the first 1 characters of the input array should be: ["a"]
Explanation:
Nothing is replaced.
Example 3:
Input:
["a","b","b","b","b","b","b","b","b","b","b","b","b"]
Output:
Return 4, and the first 4 characters of the input array should be: ["a","b","1","2"].
Explanation:
Since the character "a" does not repeat, it is not compressed. "bbbbbbbbbbbb" is replaced
by "b12".
Notice each digit has it's own entry in the array.
Note:
    All characters have an ASCII value in [35, 126].
    1 <= len(chars) <= 1000.

#################################################################################
Find Bottom Left Tree Value
  Given a binary tree, find the leftmost value in the last row of the tree.
  Example 1:
  Input:
      2
     / \
    1   3
  Output:
  1
  Example 2:
  Input:
          1
         / \
        2   3
       /   / \
      4   5   6
         /
        7
  Output:
  7
  Note: You may assume the tree (i.e., the given root node) is not NULL. 

#################################################################################
Meeting Rooms
  Given an array of meeting time intervals consisting of start and end times
  [[s1,e1],[s2,e2],...] (si < ei), determine if a person could attend all meetings.
  For example,
  Given [[0, 30],[5, 10],[15, 20]],
  return false. 

#################################################################################
Meeting Rooms II
  Given an array of meeting time intervals consisting of start and end times
  [[s1,e1],[s2,e2],...] (si < ei), find the minimum number of conference rooms required.
  For example,
  Given [[0, 30],[5, 10],[15, 20]],
  return 2. 

#################################################################################
Best Meeting Point
  A group of two or more people wants to meet and minimize the total travel distance. You are given a 2D grid of values 0 or 1, where each 1 marks the home of someone in the group. The distance is calculated using Manhattan Distance, where distance(p1, p2) = |p2.x - p1.x| + |p2.y - p1.y|.
  For example, given three people living at (0,0), (0,4), and (2,2):
  1 - 0 - 0 - 0 - 1
  |   |   |   |   |
  0 - 0 - 0 - 0 - 0
  |   |   |   |   |
  0 - 0 - 1 - 0 - 0
  The point (0,2) is an ideal meeting point, as the total travel distance of 2+2+2=6 is minimal. So return 6.

#################################################################################
Sort Colors
[1,2,0] => move 0s to start, 2s to end and reduce idx pointer after each swap (At most 2n
  movement) for idx pointer
  Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.
  Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.
  Note:
  You are not suppose to use the library's sort function for this problem.
  click to show follow up.
  Follow up:
  A rather straight forward solution is a two-pass algorithm using counting sort.
  First, iterate the array counting number of 0's, 1's, and 2's, then overwrite array with total number of 0's, then 1's and followed by 2's.
  Could you come up with an one-pass algorithm using only constant space?

#################################################################################
Kth Smallest Element in a BST  (Inorder with static
  Given a binary search tree, write a function kthSmallest to find the kth smallest element in it.
  Note:
  You may assume k is always valid, 1 ≤ k ≤ BST's total elements.
  Follow up:
  What if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?

#################################################################################
Given a binary tree, find the maximum path sum.
  For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path does not need to go through the root.
  For example:
  Given the below binary tree,

         1
        / \
       2   3
  Return 6.


#################################################################################
String to Integer (atoi)
  Implement atoi to convert a string to an integer.
  Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself what are the possible input cases.
  Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). You are responsible to gather all the input requirements up front.
  Update (2015-02-10):
  The signature of the C++ function had been updated. If you still see your function signature accepts a const char * argument, please click the reload button  to reset your code definition.
  spoilers alert... click to show requirements for atoi.
  Requirements for atoi:
  The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.
  The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.
  If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.
  If no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.

#################################################################################
BST - find next immediate higher value - Inorder traversal i.e. Inorder successor
  Ex . BST 2,3,6,9,7,4,13,24,19
  find immediate highest value for 9 should be 13

#################################################################################
print the Reverse Fibonacci sequence

#################################################################################
Compare two version numbers version1 and version2. - compare digit by digit
  If version1 > version2 return 1, if version1 < version2 return -1, otherwise return 0.
  You may assume that the version strings are non-empty and contain only digits and the . character.
  The . character does not represent a decimal point and is used to separate number sequences.
  For instance, 2.5 is not "two and a half" or "half way to version three", it is the fifth second-level revision of the second first-level revision.
  Here is an example of version numbers ordering:
  0.1 < 1.1 < 1.2 < 13.37

#################################################################################
Binary Tree Longest Consecutive Sequence
Given a binary tree, find the length of the longest consecutive sequence path.

The path refers to any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The longest consecutive path need to be from parent to child (cannot be the reverse).

For example,

   1
    \
     3
    / \
   2   4
        \
         5

Longest consecutive sequence path is 3-4-5, so return 3.

   2
    \
     3
    / 
   2    
  / 
 1

Longest consecutive sequence path is 2-3,not3-2-1, so return 2. 

#################################################################################
Binary Tree Longest Consecutive Sequence II

Given a binary tree, you need to find the length of Longest Consecutive Path in Binary Tree.

Especially, this path can be either increasing or decreasing. For example, [1,2,3,4] and [4,3,2,1] are both considered valid, but the path [1,2,4,3] is not valid. On the other hand, the path can be in the child-Parent-child order, where not necessarily be parent-child order.

Example 1:

Input:
        1
       / \
      2   3
Output: 2
Explanation: The longest consecutive path is [1, 2] or [2, 1].

Example 2:

Input:
        2
       / \
      1   3
Output: 3
Explanation: The longest consecutive path is [1, 2, 3] or [3, 2, 1].

Note: All the values of tree nodes are in the range of [-1e7, 1e7].

#################################################################################
Rotate List

Given a list, rotate the list to the right by k places, where k is non-negative.
Example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.


#################################################################################
Rotate list
Missing number
Unique digit
Reverse a Doubly Link List

http://cslibrary.stanford.edu/105/LinkedListProblems.pdf
http://cslibrary.stanford.edu/110/BinaryTrees.pdf




vim:tw=90:sw=2:et:norl:
